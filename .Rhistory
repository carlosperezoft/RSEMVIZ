mov~1;
proyext~1;
arta~1;
patentes~1;
ponint~1;
gmaesdoc~1;
inves~1;
sumah~1;
caplibr~1;
invesjun~1;
otros~1;
artb~1;
ponnal~1;
";
result<-lavaan::sem(model, data=modelData);
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
library(lavaan)
library(dplyr)
library(printr)
library(knitr)
library(xtable)
library(effects)
semModel <- '
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
dem60 ~ ind60
dem65 ~ ind60 + dem60
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8'
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = T, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
kcoTab <- kable(coefTxt)
kcoTab
kcoTab["y7~1"]
names(coefTxt)
idStr <- "dem60=~y2"
coefTxt[idStr]
class(coefTxt)
# extrae el valor con etiqueta:
int1 <- coefTxt["y2~1"]
int1
# extrae el valor solo:
int2 <- coefTxt["y2~1"][[1]]
int2
#
coef(fit2)[["y2~1"]]
#
x <- 20
yhatx <- int1 + int2 * x
yhatx
#
effprice <- effect("dem60=~y2", fit2)
#
effprice <- effect("dem60=~y2", fit2)
#
effprice <- effect("dem60=~y2", fit2)
plot(effprice)
#
## Extraccion de informacion de forma legible: (usar ?lavNames para mas detalles)
lavNames(fit2, type = "ov")
lavNames(fit2, type = c("ov", "lv"))
lavNames(fit2, type = c("ov.model", "lv.interaction"))
#
cov(PoliticalDemocracy)
cor(PoliticalDemocracy)
vcov(fit2)
AIC(fit2)
BIC(fit2)
fitMeasures(fit2, "chisq") # etiqueta y valor !
fitmeasures(fit2, "chisq")[["chisq"]] # el valor solo !
fitMeasures(fit2, c("chisq", "aic", "bic", "tli", "rmsea"))
#
fitMeasures(fit2)
parameterEstimates(fit2)
coef(fit2)
vcov(fit2)
logLik(fit2)
resid(fit2)
modindices(fit2)
partable(fit2)
fitted(fit2)
## Extraccion de informacion de cara al uso interno u otros paquetes
## util para SEMVIZ !!
## (usar ?lavInspect para mas detalles)
##
inspect(fit2,"coef")
inspect(fit2,"free")
inspect(fit2,"start")
inspect(fit2,"sampstat")
inspect(fit2,"se")
inspect(fit2,"std")
inspect(fit2,"r2")
inspect(fit2,"dx.all")
inspect(fit2,"mi")
#
lavInspect(fit2,"patterns")
lavInspect(fit2,"cov.lv")
lavInspect(fit2,"cor.lv")
lavInspect(fit2,"mean.lv")
lavInspect(fit2,"cov.ov")
lavInspect(fit2,"cor.ov")
lavInspect(fit2,"cov.all")
lavInspect(fit2,"cor.all")
lavInspect(fit2,"rsquare")
#
lavTech(fit2,"information")
lavTech(fit2,"vcov")
lavTech(fit2,"fit")
# Pruebas de Prediccion de Datos:
# In the linear case (when the indicators are continuous),
# the possible options are "regression" or "Bartlett"
# (usar ?lavPredict para mas detalles)
#
head(lavPredict(fit2, type = "lv", method = "regression")) # ver primeros 6
head(lavPredict(fit2, type = "ov", method = "regression")) # ver primeros 6
# uso de datos simulados:
# (usar ?simulateData para mas detalles)
#
datsim1 <-simulateData(semModel, model.type = "sem", std.lv=T, meanstructure=T, sample.nobs=300, seed=1234567)
tail(datsim1) # ver ultimoa 6
fit1 <- sem(semModel, data=datsim1, std.lv=T, meanstructure=T)
summary(fit1, fit.measures=T, standardized=F)
fit3 <- lavaan::sem(semModel, data=datsim2, std.lv=T, meanstructure=T)
summary(fit3 , fit.measures=T, standardized=T)
set.seed(1234)
datsim2 <- simulateData(semModel, model.type = "sem", sample.nobs = 200L, empirical = TRUE, standardized=T)
tail(datsim2) # ver ultimos 6
fit1 <- sem(semModel, data=datsim1, std.lv=T, meanstructure=T)
summary(fit1, fit.measures=T, standardized=F)
fit3 <- lavaan::sem(semModel, data=datsim2, std.lv=T, meanstructure=T)
summary(fit3 , fit.measures=T, standardized=T)
## OTRAS PREDICCIONES:
head(lavPredict(fit3))
head(predict(fit3, newdata = datsim1)) # En caso de usar datos nuevos !
#
fit.fsr <- lavaan:::fsr(semModel, data = datsim1, output = "lavaan")
summary(fit.fsr)
#
fit2.fsr <- lavaan::fsr(semModel, data = PoliticalDemocracy, fsr.method = "Croon")
#
fit2.fsr <- lavaan::fsr(semModel, data = PoliticalDemocracy, fsr.method = "Croon")
coefTxt[idStr]
names(coefTxt)
coefTxt
kcoTab <- kable(coefTxt)
kcoTab
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
class(coef)
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
coefTxt
#
# lectura de coeficientes:
coefTxt <- data.frame(names=coef(fit2))
coefTxt
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
coefTxt <- names("coef", "val")
coefTxt <- names(c("coef", "val"))
coefTxt
row.names(coefTxt) <- c("coef", "val")
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
row.names(coefTxt) <- c("coef", "val")
rownames(coefTxt) <- c("coef", "val")
coefTxt
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
rownames(coefTxt) <- c("coef", "val")
coefTxt
colnames(coefTxt) <- c("coef", "val")
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
colnames(coefTxt) <- c("coef", "val")
colnames(coefTxt) <- c(val")
colnames(coefTxt) <- c("val")
colnames(coefTxt) <- c("val")
coefTxt
coefTxt["y7~1"]
#
coef(fit2)[["y2~1"]]
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
dim(coefTxt)
class(coefTxt)
#
# lectura de coeficientes:
vartable(fit2)
#
fitMeasures(fit2)
parameterEstimates(fit2)
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
kcoTab
kcoTab <- kable(coefTxt)
kcoTab
kcoTab["y7~1"]
kcoTab["x"]
kcoTab[1]
kcoTab[1,]
kcoTab[,1]
kcoTab["x"]
kcoTab[1]
parameterEstimates(fit2)
parameterEstimates(fit2) %>% filter(lhs == "dem60")
parameterEstimates(fit2) %>% filter(lhs == "dem60")["est]
parameterEstimates(fit2) %>% filter(lhs == "dem60")["est"]
parameterEstimates(fit2) %>% filter(lhs == "dem60")["est"]
parameterEstimates(fit2) %>% filter(lhs == "dem60") %>% ["est"]
parameterEstimates(fit2) %>% filter(lhs == "dem60")
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))["se"]
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))["est"]
vcov(fit2)
modindices(fit2)
fitted(fit2)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=F)
summary(fit2, fit.measures=T, standardized=T)
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))["est", "z"]
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))[c("est", "z")]
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))
partable(fit2)
vartable(fit2)
shiny::runApp('inst/appweb')
source('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb/include_server/hipotesis_model_server.R')
runApp('inst/appweb')
runApp('inst/appweb')
vartable(fit2)
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
data("grupos_invest_udea_model")
grupos_invest_udea_model
grupos_invest_udea_model <- "   # modelo de medicion (measurement)
RECUR  =~ profes + salario + especie
OFERTA =~ codi + joinvcol + matripos + jovinpre + lineas
RELA   =~ centrosex + mov + proyext
IMPINT =~ arta + patentes + ponint + gmaesdoc + inves + sumah + caplibr
IMPREG =~ invesjun + otros + artb + ponnal
# modelo estructural (regressions)
OFERTA ~ RECUR
RELA   ~ RECUR
IMPINT ~ OFERTA + RELA
IMPREG ~ OFERTA + RELA
"
grupos_invest_udea_model <- "
# modelo de medicion (measurement)
RECUR  =~ profes + salario + especie
OFERTA =~ codi + joinvcol + matripos + jovinpre + lineas
RELA   =~ centrosex + mov + proyext
IMPINT =~ arta + patentes + ponint + gmaesdoc + inves + sumah + caplibr
IMPREG =~ invesjun + otros + artb + ponnal
# modelo estructural (regressions)
OFERTA ~ RECUR
RELA   ~ RECUR
IMPINT ~ OFERTA + RELA
IMPREG ~ OFERTA + RELA
";
grupos_invest_udea_model
devtools::use_data(grupos_invest_udea_model)
devtools::use_data(grupos_invest_udea_model, overwrite = T)
library(qgraph)
data("big5")
head(big5)
data("big5groups")
head(big5groups)
View(big5groups)
data("DATOS_GRUPOS_INVEST_UdeA")
View(DATOS_GRUPOS_INVEST_UdeA)
View(big5)
qgraph(cor(big5))
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA))
head(DATOS_GRUPOS_INVEST_UdeA[-4])
head(DATOS_GRUPOS_INVEST_UdeA[,-4])
head(DATOS_GRUPOS_INVEST_UdeA[,4:])
head(DATOS_GRUPOS_INVEST_UdeA[,4])
head(DATOS_GRUPOS_INVEST_UdeA[,4:243])
head(DATOS_GRUPOS_INVEST_UdeA[,4:55])
head(DATOS_GRUPOS_INVEST_UdeA[,5:54])
head(DATOS_GRUPOS_INVEST_UdeA[,5:59])
dim(DATOS_GRUPOS_INVEST_UdeA)
dim(DATOS_GRUPOS_INVEST_UdeA)[2]
head(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])
qgraph(DATOS_GRUPOS_INVEST_UdeA)
qgraph(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]
)
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
qgraph(car(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
DATOS_GRUPOS_INVEST_UdeA[,2:4]
DATOS_GRUPOS_INVEST_UdeA[,c(2,4)]
qgraph(cor_auto(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
head(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])
cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])
cor_auto(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])
var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])
DATOS_GRUPOS_INVEST_UdeA[,c(2,4)]
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = DATOS_GRUPOS_INVEST_UdeA[,c(2,4)])
grupos <- data.frame(DATOS_GRUPOS_INVEST_UdeA[,c(2,4)])
grupos
dim(grupos)
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = grupos)
DATOS_GRUPOS_INVEST_UdeA[,"area"]
gruposFactor <- as.factor(DATOS_GRUPOS_INVEST_UdeA[,"area"])
gruposFactor <- factor(DATOS_GRUPOS_INVEST_UdeA[,"area"])
gruposFactor <- factor(c(DATOS_GRUPOS_INVEST_UdeA[,"area"]))
gruposCol <- DATOS_GRUPOS_INVEST_UdeA[,"area"]
class(gruposCol)
gruposCol
unlist(gruposCol)
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = unlist(grupos))
gruposFactor <- factor(unlist(DATOS_GRUPOS_INVEST_UdeA[,"area"]))
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposFac)
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposFactor)
gruposFactor
gruposCol
grupos
gruposFactor
gruposList <- split(DATOS_GRUPOS_INVEST_UdeA[,4], gruposFactor)
gruposList
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
gruposList <- split(unlist(DATOS_GRUPOS_INVEST_UdeA[,4]), gruposFactor)
gruposList
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
big5groups
DATOS_GRUPOS_INVEST_UdeA[,4]
DATOS_GRUPOS_INVEST_UdeA[,4][1]
DATOS_GRUPOS_INVEST_UdeA[,4][1][1]
DATOS_GRUPOS_INVEST_UdeA[,4][1][0]
DATOS_GRUPOS_INVEST_UdeA[,4][0][0]
DATOS_GRUPOS_INVEST_UdeA[,4][0][0][1]
DATOS_GRUPOS_INVEST_UdeA[,4]
unlist(DATOS_GRUPOS_INVEST_UdeA[,4])
list(DATOS_GRUPOS_INVEST_UdeA[,4])
dim(DATOS_GRUPOS_INVEST_UdeA[,4])
class(DATOS_GRUPOS_INVEST_UdeA[,4])
names(DATOS_GRUPOS_INVEST_UdeA[,4])
names(DATOS_GRUPOS_INVEST_UdeA[,"num"])
(DATOS_GRUPOS_INVEST_UdeA[,"num"]
)
DATOS_GRUPOS_INVEST_UdeA[,"num"]
aggregate(DATOS_GRUPOS_INVEST_UdeA$num, by=list(DATOS_GRUPOS_INVEST_UdeA$area))
aggregate(DATOS_GRUPOS_INVEST_UdeA$num, by=list(DATOS_GRUPOS_INVEST_UdeA$area), FUN = ~ *1)
aggregate(DATOS_GRUPOS_INVEST_UdeA$num, by=list(DATOS_GRUPOS_INVEST_UdeA$area), FUN = x *1)
aggregate(DATOS_GRUPOS_INVEST_UdeA$num, by=list(DATOS_GRUPOS_INVEST_UdeA$area), FUN = function(x) {x*1})
gruposList <- split(DATOS_GRUPOS_INVEST_UdeA$num, DATOS_GRUPOS_INVEST_UdeA$area)
gruposList
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
big5groups
dim(BIC())
dim(big5
)
dim(big5groups)
dim(gruposList)
gruposList <- split(DATOS_GRUPOS_INVEST_UdeA$num, DATOS_GRUPOS_INVEST_UdeA$areacod)
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]
data.frame(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])
qgraph(var(data.frame(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])), groups = gruposList)
qgraph(cor(big5), groups = big5groups, minimum = 0.25, borders = FALSE, vsize = 1, cut = 0.3)
qgraph(cor(data.frame(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])), groups = gruposList)
qgraph(cor(data.frame(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]])))
big5
dim(big5)
head(big5)
dim(big5)
dim(big5groups)
cor(big5)
dim(cor(big5))
dim(cor(DATOS_GRUPOS_INVEST_UdeA))
dim(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
dim(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
(cor(big5))
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
gruposList
big5groups
dim(cor(big5))
DATOS_GRUPOS_INVEST_UdeA$codi
DATOS_GRUPOS_INVEST_UdeA["1"]
DATOS_GRUPOS_INVEST_UdeA[1]
DATOS_GRUPOS_INVEST_UdeA[names(DATOS_GRUPOS_INVEST_UdeA) == "codi"]
names(DATOS_GRUPOS_INVEST_UdeA) == "codi"
(names(DATOS_GRUPOS_INVEST_UdeA) == "codi")
wich(colnames(DATOS_GRUPOS_INVEST_UdeA) == "codi"))
wich(colnames(DATOS_GRUPOS_INVEST_UdeA) == "codi")
which(colnames(DATOS_GRUPOS_INVEST_UdeA) == "codi")
library(readr)
GRUPOS_VAR_LATENTES_UdeA <- read_csv("data-raw/GRUPOS_VAR_LATENTES_UdeA.csv")
gruposList <- split(GRUPOS_VAR_LATENTES_UdeA$ID_VAR, DATOS_GRUPOS_INVEST_UdeA$LATENTE)
gruposList <- split(GRUPOS_VAR_LATENTES_UdeA$ID_VAR, GRUPOS_VAR_LATENTES_UdeA$LATENTE)
qgraph(var(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), groups = gruposList)
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), graph = "glasso",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA), layout = "spring", legend.cex =0.6, groups = gruposList)
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), graph = "glasso",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA), layout = "spring", legend.cex =0.6)
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), graph = "concentration",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA), layout = "spring", legend.cex =0.6))
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), graph = "concentration",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA), layout = "spring", legend.cex =0.6)
qgraph.efa(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]], factors = 5, groups = gruposList, rotation = "promax",
minimum = 0.2, cut = 0.4, vsize = c(1, 15), borders = FALSE,
asize = 0.07, esize = 4, vTrans = 200, layout="circle" )
qgraph.efa(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]], factors = 4, groups = gruposList, rotation = "promax",
minimum = 0.2, cut = 0.4, vsize = c(1, 15), borders = FALSE,
asize = 0.07, esize = 4, vTrans = 200, layout="circle" )
qgraph.pca(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]], factors = 4, groups = gruposList, rotation = "promax",
minimum = 0.2, cut = 0.4, vsize = c(1, 15), borders = FALSE,
asize = 0.07, esize = 4, vTrans = 200, layout="circle" )
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), graph = "concentration",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA), layout = "spring", legend.cex =0.6)
Q <- qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]),
minimum = 0.25, cut = 0.4, vsize = 1.5, DoNotPlot = TRUE,
groups = gruposList, legend = TRUE, borders = FALSE)
# Layout Spring es tipo nube-cluster
Q <- qgraph(Q, layout = "spring", overlay = TRUE, DoNotPlot = FALSE,
posCol = "green", negCol = "red")
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31), groups = gruposList)
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31), groups = gruposList))
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31]), groups = gruposList)
DATOS_GRUPOS_INVEST_UdeA[,5:31]
library(readr)
DATOS_GRUPOS_INVEST_UdeA <- read_csv("data-raw/DATOS_GRUPOS_INVEST_UdeA.csv")
DATOS_GRUPOS_INVEST_UdeA
DATOS_GRUPOS_INVEST_UdeA["area"]
DATOS_GRUPOS_INVEST_UdeA$area
library(readr)
GRUPOS_VAR_LATENTES_UdeA <- read_csv("data-raw/GRUPOS_VAR_LATENTES_UdeA.csv")
View(GRUPOS_VAR_LATENTES_UdeA)
gruposList <- split(GRUPOS_VAR_LATENTES_UdeA$id_var, GRUPOS_VAR_LATENTES_UdeA$latente)
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]))
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31]), groups = gruposList)
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31]), groups = gruposList, layout = "circle")
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31]), groups = gruposList, layout = "spring")
qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:dim(DATOS_GRUPOS_INVEST_UdeA)[2]]), graph = "glasso",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA), layout = "spring", legend.cex =0.6, groups = gruposList)
qgraph(cov(DATOS_GRUPOS_INVEST_UdeA[,5:31]), groups = gruposList, layout = "circle")
Q <- qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:31]),
minimum = 0.25, cut = 0.4, vsize = 1.5, DoNotPlot = TRUE,
groups = gruposList, legend = TRUE, borders = FALSE)
# Layout Spring es tipo nube-cluster
Q <- qgraph(Q, layout = "spring", overlay = TRUE, DoNotPlot = FALSE,
posCol = "green", negCol = "red")
Q <- qgraph(cor(big5), groups = big5groups)
Q <- qgraph(Q, minimum = 0.25, borders = FALSE, vsize = 2) # ok: mejor, rapido, claro
Q <- qgraph(cor(DATOS_GRUPOS_INVEST_UdeA[,5:31]), groups = gruposList)
Q <- qgraph(Q, minimum = 0.25, borders = FALSE, vsize = 2) # ok: mejor, rapido, claro
devtools::use_data(DATOS_GRUPOS_INVEST_UdeA, overwrite = T)
devtools::use_data(GRUPOS_VAR_LATENTES_UdeA, overwrite = T)
rm(ls())
ls()
cor_auto(DATOS_GRUPOS_INVEST_UdeA[,5:31])
graph_factor <- qgraph(cor_auto(DATOS_GRUPOS_INVEST_UdeA[,5:31]), graph = "factorial", sampleSize = nrow(bfi),
layout = "spring", legend.cex =0.6, groups = gruposList)
qgraph(cor_auto(DATOS_GRUPOS_INVEST_UdeA[,5:31]), graph = "factorial",
sampleSize = nrow(DATOS_GRUPOS_INVEST_UdeA),
layout = "spring", legend.cex =0.6, groups = gruposList)
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
