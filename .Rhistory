runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
install.packages("formattable")
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
shiny::runApp('inst/appweb')
library(lavaan);
modelData <- read.table("C:\\PEREZOFT_MAESTRIA\\3_SEMESTRE_2018_1\\8_SEM_BASE_DLLO\\R_LAVAAN_SEM\\DATOS_GRUPO_SEM_UdeA.csv", header = TRUE, sep=",");
runApp('inst/appweb')
modelData <- read.csv("C:/PEREZOFT_MAESTRIA/3_SEMESTRE_2018_1/8_SEM_BASE_DLLO/R_LAVAAN_SEM/DATOS_GRUPO_SEM_UdeA.csv");
getwd()
setwd("C:/PEREZOFT_MAESTRIA/3_SEMESTRE_2018_1/8_SEM_BASE_DLLO/R_LAVAAN_SEM/")
getwd()
modelData <- read.csv("DATOS_GRUPO_SEM_UdeA.csv");
modelData <- read.csv("DATOS_GRUPO_SEM_UdeA.csv");
modelData
modelData <- read.table("C:/PEREZOFT_MAESTRIA/3_SEMESTRE_2018_1/8_SEM_BASE_DLLO/R_LAVAAN_SEM/DATOS_GRUPO_SEM_UdeA.csv", header = TRUE, sep=",");
model<-"
! regressions
RECUR=~RECUR__profes*profes
RECUR=~1.0*salario
RECUR=~RECUR__especie*especie
OFERTA=~1.0*codi
OFERTA=~OFERTA__joinvcol*joinvcol
OFERTA=~OFERTA__matripos*matripos
OFERTA=~OFERTA__jovinpre*jovinpre
OFERTA=~OFERTA__lineas*lineas
RELA=~RELA__centrosex*centrosex
RELA=~RELA__mov*mov
RELA=~1.0*proyext
IMPINT=~IMPINT__arta*arta
IMPINT=~IMPINT__patentes*patentes
IMPINT=~IMPINT__ponint*ponint
IMPINT=~IMPINT__gmaesdoc*gmaesdoc
IMPINT=~IMPINT__inves*inves
IMPINT=~IMPINT__sumah*sumah
IMPINT=~IMPINT__caplibr*caplibr
IMPREG=~IMPREG__ponnal*ponnal
IMPREG=~IMPREG__artb*artb
IMPREG=~IMPREG__otros*otros
IMPREG=~IMPREG__invesjun*invesjun
RECUR=~RECUR__OFERTA*OFERTA
RECUR=~RECUR__RELA*RELA
OFERTA=~OFERTA__IMPINT*IMPINT
OFERTA=~OFERTA__IMPREG*IMPREG
RELA=~RELA__IMPINT*IMPINT
RELA=~RELA__IMPREG*IMPREG
! residuals, variances and covariances
RECUR ~~ VAR_RECUR*RECUR
profes ~~ VAR_profes*profes
salario ~~ VAR_salario*salario
especie ~~ VAR_especie*especie
OFERTA ~~ VAR_OFERTA*OFERTA
lineas ~~ VAR_lineas*lineas
jovinpre ~~ VAR_jovinpre*jovinpre
matripos ~~ VAR_matripos*matripos
joinvcol ~~ VAR_joinvcol*joinvcol
codi ~~ VAR_codi*codi
RELA ~~ VAR_RELA*RELA
centrosex ~~ VAR_centrosex*centrosex
mov ~~ VAR_mov*mov
proyext ~~ VAR_proyext*proyext
IMPINT ~~ VAR_IMPINT*IMPINT
arta ~~ VAR_arta*arta
patentes ~~ VAR_patentes*patentes
ponint ~~ VAR_ponint*ponint
gmaesdoc ~~ VAR_gmaesdoc*gmaesdoc
inves ~~ VAR_inves*inves
sumah ~~ VAR_sumah*sumah
caplibr ~~ VAR_caplibr*caplibr
IMPREG ~~ VAR_IMPREG*IMPREG
invesjun ~~ VAR_invesjun*invesjun
otros ~~ VAR_otros*otros
artb ~~ VAR_artb*artb
ponnal ~~ VAR_ponnal*ponnal
RECUR ~~ 0.0*IMPINT
RECUR ~~ 0.0*IMPREG
OFERTA ~~ 0.0*RELA
IMPINT ~~ 0.0*IMPREG
! observed means
profes~1;
salario~1;
especie~1;
lineas~1;
jovinpre~1;
matripos~1;
joinvcol~1;
codi~1;
centrosex~1;
mov~1;
proyext~1;
arta~1;
patentes~1;
ponint~1;
gmaesdoc~1;
inves~1;
sumah~1;
caplibr~1;
invesjun~1;
otros~1;
artb~1;
ponnal~1;
";
result<-lavaan(model, data=modelData, fixed.x=FALSE, missing="FIML");
summary(result, fit.measures=TRUE);
result<-lavaan::sem(model, data=modelData, fixed.x=FALSE, missing="FIML");
summary(result, fit.measures=TRUE);
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
head(modelData)
model<-"
# modelo de medicion (measurement)
RECUR  =~ profes + salario + especie
OFERTA =~ codi + joinvcol + matripos + jovinpre + lineas
RELA   =~ centrosex + mov + proyext
IMPINT =~ arta + patentes + ponint + gmaesdoc + inves + sumah + caplibr
IMPREG =~ invesjun + otros + artb + ponnal
# modelo estructural (regressions)
OFERTA ~ RECUR
RELA   ~ RECUR
IMPINT ~ OFERTA + RELA
IMPREG ~ OFERTA + RELA
";
model
result<-lavaan(model, data=modelData, fixed.x=FALSE, missing="FIML");
result<-lavaan::Sem(model, data=modelData, fixed.x=FALSE, missing="FIML");
result<-lavaan::sem(model, data=modelData, fixed.x=FALSE, missing="FIML");
result<-lavaan::sem(model, data=modelData, missing="FIML");
result<-lavaan::sem(model, data=modelData);
result
summarise(result)
summary(result)
model<-"
! regressions
RECUR=~RECUR__profes*profes
RECUR=~1.0*salario
RECUR=~RECUR__especie*especie
OFERTA=~1.0*codi
OFERTA=~OFERTA__joinvcol*joinvcol
OFERTA=~OFERTA__matripos*matripos
OFERTA=~OFERTA__jovinpre*jovinpre
OFERTA=~OFERTA__lineas*lineas
RELA=~RELA__centrosex*centrosex
RELA=~RELA__mov*mov
RELA=~1.0*proyext
IMPINT=~IMPINT__arta*arta
IMPINT=~IMPINT__patentes*patentes
IMPINT=~IMPINT__ponint*ponint
IMPINT=~IMPINT__gmaesdoc*gmaesdoc
IMPINT=~IMPINT__inves*inves
IMPINT=~IMPINT__sumah*sumah
IMPINT=~IMPINT__caplibr*caplibr
IMPREG=~IMPREG__ponnal*ponnal
IMPREG=~IMPREG__artb*artb
IMPREG=~IMPREG__otros*otros
IMPREG=~IMPREG__invesjun*invesjun
RECUR=~RECUR__OFERTA*OFERTA
RECUR=~RECUR__RELA*RELA
OFERTA=~OFERTA__IMPINT*IMPINT
OFERTA=~OFERTA__IMPREG*IMPREG
RELA=~RELA__IMPINT*IMPINT
RELA=~RELA__IMPREG*IMPREG
! residuals, variances and covariances
RECUR ~~ VAR_RECUR*RECUR
profes ~~ VAR_profes*profes
salario ~~ VAR_salario*salario
especie ~~ VAR_especie*especie
OFERTA ~~ VAR_OFERTA*OFERTA
lineas ~~ VAR_lineas*lineas
jovinpre ~~ VAR_jovinpre*jovinpre
matripos ~~ VAR_matripos*matripos
joinvcol ~~ VAR_joinvcol*joinvcol
codi ~~ VAR_codi*codi
RELA ~~ VAR_RELA*RELA
centrosex ~~ VAR_centrosex*centrosex
mov ~~ VAR_mov*mov
proyext ~~ VAR_proyext*proyext
IMPINT ~~ VAR_IMPINT*IMPINT
arta ~~ VAR_arta*arta
patentes ~~ VAR_patentes*patentes
ponint ~~ VAR_ponint*ponint
gmaesdoc ~~ VAR_gmaesdoc*gmaesdoc
inves ~~ VAR_inves*inves
sumah ~~ VAR_sumah*sumah
caplibr ~~ VAR_caplibr*caplibr
IMPREG ~~ VAR_IMPREG*IMPREG
invesjun ~~ VAR_invesjun*invesjun
otros ~~ VAR_otros*otros
artb ~~ VAR_artb*artb
ponnal ~~ VAR_ponnal*ponnal
RECUR ~~ 0.0*IMPINT
RECUR ~~ 0.0*IMPREG
OFERTA ~~ 0.0*RELA
IMPINT ~~ 0.0*IMPREG
! observed means
profes~1;
salario~1;
especie~1;
lineas~1;
jovinpre~1;
matripos~1;
joinvcol~1;
codi~1;
centrosex~1;
mov~1;
proyext~1;
arta~1;
patentes~1;
ponint~1;
gmaesdoc~1;
inves~1;
sumah~1;
caplibr~1;
invesjun~1;
otros~1;
artb~1;
ponnal~1;
";
result<-lavaan::sem(model, data=modelData);
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
runApp('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb')
library(lavaan)
library(dplyr)
library(printr)
library(knitr)
library(xtable)
library(effects)
semModel <- '
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + y2 + y3 + y4
dem65 =~ y5 + y6 + y7 + y8
dem60 ~ ind60
dem65 ~ ind60 + dem60
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8'
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = T, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
kcoTab <- kable(coefTxt)
kcoTab
kcoTab["y7~1"]
names(coefTxt)
idStr <- "dem60=~y2"
coefTxt[idStr]
class(coefTxt)
# extrae el valor con etiqueta:
int1 <- coefTxt["y2~1"]
int1
# extrae el valor solo:
int2 <- coefTxt["y2~1"][[1]]
int2
#
coef(fit2)[["y2~1"]]
#
x <- 20
yhatx <- int1 + int2 * x
yhatx
#
effprice <- effect("dem60=~y2", fit2)
#
effprice <- effect("dem60=~y2", fit2)
#
effprice <- effect("dem60=~y2", fit2)
plot(effprice)
#
## Extraccion de informacion de forma legible: (usar ?lavNames para mas detalles)
lavNames(fit2, type = "ov")
lavNames(fit2, type = c("ov", "lv"))
lavNames(fit2, type = c("ov.model", "lv.interaction"))
#
cov(PoliticalDemocracy)
cor(PoliticalDemocracy)
vcov(fit2)
AIC(fit2)
BIC(fit2)
fitMeasures(fit2, "chisq") # etiqueta y valor !
fitmeasures(fit2, "chisq")[["chisq"]] # el valor solo !
fitMeasures(fit2, c("chisq", "aic", "bic", "tli", "rmsea"))
#
fitMeasures(fit2)
parameterEstimates(fit2)
coef(fit2)
vcov(fit2)
logLik(fit2)
resid(fit2)
modindices(fit2)
partable(fit2)
fitted(fit2)
## Extraccion de informacion de cara al uso interno u otros paquetes
## util para SEMVIZ !!
## (usar ?lavInspect para mas detalles)
##
inspect(fit2,"coef")
inspect(fit2,"free")
inspect(fit2,"start")
inspect(fit2,"sampstat")
inspect(fit2,"se")
inspect(fit2,"std")
inspect(fit2,"r2")
inspect(fit2,"dx.all")
inspect(fit2,"mi")
#
lavInspect(fit2,"patterns")
lavInspect(fit2,"cov.lv")
lavInspect(fit2,"cor.lv")
lavInspect(fit2,"mean.lv")
lavInspect(fit2,"cov.ov")
lavInspect(fit2,"cor.ov")
lavInspect(fit2,"cov.all")
lavInspect(fit2,"cor.all")
lavInspect(fit2,"rsquare")
#
lavTech(fit2,"information")
lavTech(fit2,"vcov")
lavTech(fit2,"fit")
# Pruebas de Prediccion de Datos:
# In the linear case (when the indicators are continuous),
# the possible options are "regression" or "Bartlett"
# (usar ?lavPredict para mas detalles)
#
head(lavPredict(fit2, type = "lv", method = "regression")) # ver primeros 6
head(lavPredict(fit2, type = "ov", method = "regression")) # ver primeros 6
# uso de datos simulados:
# (usar ?simulateData para mas detalles)
#
datsim1 <-simulateData(semModel, model.type = "sem", std.lv=T, meanstructure=T, sample.nobs=300, seed=1234567)
tail(datsim1) # ver ultimoa 6
fit1 <- sem(semModel, data=datsim1, std.lv=T, meanstructure=T)
summary(fit1, fit.measures=T, standardized=F)
fit3 <- lavaan::sem(semModel, data=datsim2, std.lv=T, meanstructure=T)
summary(fit3 , fit.measures=T, standardized=T)
set.seed(1234)
datsim2 <- simulateData(semModel, model.type = "sem", sample.nobs = 200L, empirical = TRUE, standardized=T)
tail(datsim2) # ver ultimos 6
fit1 <- sem(semModel, data=datsim1, std.lv=T, meanstructure=T)
summary(fit1, fit.measures=T, standardized=F)
fit3 <- lavaan::sem(semModel, data=datsim2, std.lv=T, meanstructure=T)
summary(fit3 , fit.measures=T, standardized=T)
## OTRAS PREDICCIONES:
head(lavPredict(fit3))
head(predict(fit3, newdata = datsim1)) # En caso de usar datos nuevos !
#
fit.fsr <- lavaan:::fsr(semModel, data = datsim1, output = "lavaan")
summary(fit.fsr)
#
fit2.fsr <- lavaan::fsr(semModel, data = PoliticalDemocracy, fsr.method = "Croon")
#
fit2.fsr <- lavaan::fsr(semModel, data = PoliticalDemocracy, fsr.method = "Croon")
coefTxt[idStr]
names(coefTxt)
coefTxt
kcoTab <- kable(coefTxt)
kcoTab
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
class(coef)
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
coefTxt
#
# lectura de coeficientes:
coefTxt <- data.frame(names=coef(fit2))
coefTxt
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
coefTxt <- names("coef", "val")
coefTxt <- names(c("coef", "val"))
coefTxt
row.names(coefTxt) <- c("coef", "val")
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
row.names(coefTxt) <- c("coef", "val")
rownames(coefTxt) <- c("coef", "val")
coefTxt
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
rownames(coefTxt) <- c("coef", "val")
coefTxt
colnames(coefTxt) <- c("coef", "val")
#
# lectura de coeficientes:
coefTxt <- data.frame(coef(fit2))
colnames(coefTxt) <- c("coef", "val")
colnames(coefTxt) <- c(val")
colnames(coefTxt) <- c("val")
colnames(coefTxt) <- c("val")
coefTxt
coefTxt["y7~1"]
#
coef(fit2)[["y2~1"]]
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
dim(coefTxt)
class(coefTxt)
#
# lectura de coeficientes:
vartable(fit2)
#
fitMeasures(fit2)
parameterEstimates(fit2)
#
# lectura de coeficientes:
coefTxt <- coef(fit2)
coefTxt
kcoTab
kcoTab <- kable(coefTxt)
kcoTab
kcoTab["y7~1"]
kcoTab["x"]
kcoTab[1]
kcoTab[1,]
kcoTab[,1]
kcoTab["x"]
kcoTab[1]
parameterEstimates(fit2)
parameterEstimates(fit2) %>% filter(lhs == "dem60")
parameterEstimates(fit2) %>% filter(lhs == "dem60")["est]
parameterEstimates(fit2) %>% filter(lhs == "dem60")["est"]
parameterEstimates(fit2) %>% filter(lhs == "dem60")["est"]
parameterEstimates(fit2) %>% filter(lhs == "dem60") %>% ["est"]
parameterEstimates(fit2) %>% filter(lhs == "dem60")
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))["se"]
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))["est"]
vcov(fit2)
modindices(fit2)
fitted(fit2)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=T)
summary(fit2, fit.measures=T, standardized=T)
fit2 <- sem(semModel, data=PoliticalDemocracy, std.ov = F, std.lv=T, meanstructure=F)
summary(fit2, fit.measures=T, standardized=T)
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))["est", "z"]
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))[c("est", "z")]
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))
partable(fit2)
vartable(fit2)
shiny::runApp('inst/appweb')
source('C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz/inst/appweb/include_server/hipotesis_model_server.R')
runApp('inst/appweb')
runApp('inst/appweb')
vartable(fit2)
(parameterEstimates(fit2) %>% filter(lhs == "dem60"))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
