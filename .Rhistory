) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0)
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
data
max(data["value"])
max(data["value"]) + 5
x <- max(data["value"]) + 5
x
runApp('inst/appweb')
abs(-10)
runApp('inst/appweb')
round(0.4)
round(0.6)
ceil(0.6)
floor(.8)
floor(.2)
ceiling(.2)
ceiling(.7)
ceiling(.3)
runApp('inst/appweb')
10 * ceiling(abs(max(7.6)) / 10)
10 * ceiling(abs(max(-7.6)) / 10)
10 * ceiling(abs(max(-11.6)) / 10)
ceiling(abs(max(11.6))
)
ceiling(abs(max(11.6)))
ceiling(abs(max(7.6)))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
1 *ceiling(abs(max(7.6)))
-1 *ceiling(abs(max(7.6)))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
devtools::load_all(".")
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
head(iris)
dplyr::arrange(iris, colnames(iris)[2])
dplyr::arrange(iris, 2)
dplyr::arrange(iris, c(colnames(iris)[2]))
col <- colnames(iris)[2]
col
dplyr::arrange(iris, col
)
dplyr::arrange(iris, str(col))
dplyr::arrange(iris, get(col))
dplyr::arrange(iris, get(colnames(iris)[2]))
dplyr::arrange(iris, get(colnames(iris)[1]))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
devtools::load_all(".")
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
devtools::load_all(".")
library("qgraph", lib.loc="C:/PEREZOFT_DLLO/R_STAT_343/library")
dendrogram
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
library("ggforce", lib.loc="C:/PEREZOFT_DLLO/R_STAT_343/library")
install.packages("devtools")
Sys.getenv()
Sys.setenv(R_MAX_NUM_DLLS = 512)
Sys.getenv()
library("ggforce", lib.loc="C:/PEREZOFT_DLLO/R_STAT_343/library")
dir(Sys.getenv("R_HOME"),recursive = T,full.names = T,pattern = "Renviron")
shiny::runApp('inst/appweb')
devtools::load_all("C:/PEREZOFT_MAESTRIA/4_SEMESTRE_2018_2/1_RSEMVIZ_DLLO/semviz")
devtools::load_all(".")
shiny::runApp('inst/appweb')
Sys.getenv()
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
class(iris)
kmeans(iris[1,2], 3)
kmeans(iris[c(1,2)], 3)
hclust(dist(iris[c(1,2)]))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
dendrogram <- as.dendrogram(hclust(dist(iris[, 1:4])))
ggraph(dendrogram, 'dendrogram') + geom_edge_diagonal()
dendrogram
library("ggraph", lib.loc="C:/PEREZOFT_DLLO/R_STAT_343/library")
ggraph(dendrogram, 'dendrogram') + geom_edge_diagonal()
ggraph(dendrogram, layout = 'dendrogram', circular = TRUE) +
geom_edge_diagonal() +
geom_node_point(aes(filter = leaf)) +
coord_fixed()
ggraph(dendrogram, layout = 'dendrogram', circular = TRUE) +
# geom_edge_diagonal(aes(width = ..index.., alpha = ..index..), lineend = 'round') +
geom_edge_diagonal() +
scale_edge_width(range = c(0.2, 1.5)) +
geom_node_point(aes(colour = leaf)) +
coord_fixed()
ggraph(dendrogram, layout = 'dendrogram', circular = F) +
# geom_edge_diagonal(aes(width = ..index.., alpha = ..index..), lineend = 'round') +
geom_edge_diagonal() +
scale_edge_width(range = c(0.2, 1.5)) +
geom_node_point(aes(colour = leaf)) +
coord_fixed()
ggraph(dendrogram, layout = 'dendrogram', circular = F) +
# geom_edge_diagonal(aes(width = ..index.., alpha = ..index..), lineend = 'round') +
geom_edge_diagonal() +
scale_edge_width(range = c(0.2, 1.5)) +
geom_node_point(aes(colour = leaf))
ggraph(dendrogram, 'dendrogram') + geom_edge_diagonal()
ggraph(dendrogram, 'dendrogram') + geom_edge_elbow()
ggraph(dendrogram, 'dendrogram') + geom_edge_elbow2()
ggraph(dendrogram, 'dendrogram', circular = TRUE) +
geom_edge_elbow() +
coord_fixed()
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
dendrogram
summarise(dendrogram)
summary(dendrogram)
dendroNetwork(dendrogram)
hc_data <- hclust(dist(cast_data), method = "ave")
hc_data <- hclust(dist(iris[c(1,2,3)]), method = "ave")
dendroNetwork(hc_data)
labels(hc_data)
hc_data$labels
plot(hc_data)
names(hc_data)
hc_data$order
hc_data$labels <- LETTERS(nrow(iris))
hc_data$labels <- LETTERS[nrow(iris)]
hc_data$labels
hc_data$labels <- seq(1, nrow(iris))
hc_data$labels
plot(hc_data)
dendroNetwork(hc_data)
hc_data$labels <- seq(1, nrow(iris))
hc_data <- hclust(dist(iris[c(1,2,3)]), method = "ave")
matCluster <- dist(iris[c(1,2,3)])
matCluster
x <- matrix(rnorm(100), nrow = 5)
x
dim(x)
dist(x)
shiny::runApp('inst/appweb')
dist(iris[c(1)])
iris[c(1)]
?dist
head(dist(iris[c(1)]))
x <- c(1, 2, 3)
x
dist(x)
dist(x, T, T)
dist(x, TRUE, TRUE)
dist(x, upper=TRUE, diad=TRUE)
dist(x, upper=TRUE, diag=TRUE)
?hclust
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
kmeans(iris[c(1,2)])
kmeans(iris[c(1,2)],3)
kmeans(iris[c(1,2,3)],3)
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
df=iris
m=as.matrix(cbind(df$Petal.Length, df$Petal.Width),ncol=2)
cl$size
cl=(kmeans(m,3))
cl$size
df$cluster=factor(cl$cluster)
centers=as.data.frame(cl$centers)
centers
cl=(kmeans(iris[c(1,2)],3))
cl$size
df$cluster=factor(cl$cluster)
centers=as.data.frame(cl$centers)
centers
head(iris)
cl=(kmeans(iris[c(3,4)],3))
df$cluster=factor(cl$cluster)
centers=as.data.frame(cl$centers)
centers
m
?kmeas
?kmeans
centers
df$cluster=factor(cl$cluster)
centers=as.data.frame(cl$centers)
centers
names(centers)
df=iris
m=as.matrix(cbind(df$Petal.Length, df$Petal.Width),ncol=2)
cl=(kmeans(m,3))
df$cluster=factor(cl$cluster)
centers=as.data.frame(cl$centers)
names(centers)
centers
library("ggplot2", lib.loc="C:/PEREZOFT_DLLO/R_STAT_343/library")
ggplot(data=df, aes(x=Petal.Length, y=Petal.Width, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color=’Center’)) +
geom_point(data=centers, aes(x=V1,y=V2, color=’Center’), size=52, alpha=.3, legend=FALSE)
ggplot(data=df, aes(x=Petal.Length, y=Petal.Width, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color='Center')) +
geom_point(data=centers, aes(x=V1,y=V2, color='Center'), size=52, alpha=.3, legend=FALSE)
ggplot(data=df, aes(x=Petal.Length, y=Petal.Width, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color='center')) +
geom_point(data=centers, aes(x=V1,y=V2, color='center'), size=52, alpha=.3, legend=FALSE)
runApp('inst/appweb')
ggplot(data=df, aes(x=Petal.Length, y=Petal.Width, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color="center")) +
geom_point(data=centers, aes(x=V1,y=V2, color="center"), size=52, alpha=.3, legend=FALSE)
ggplot(data=df, aes(x=Petal.Length, y=Petal.Width, color=cluster )) +
geom_point() +
geom_point(data=centers, aes(x=V1,y=V2, color="center")) +
geom_point(data=centers, aes(x=V1,y=V2, color="center"), size=52, alpha=.3, show.legend=FALSE)
runApp('inst/appweb')
cast_data <- iris[c(3,4)]
matriz_data <- as.matrix(cbind(cast_data[c(1,2)]),ncol=2)
kmeans_data <- kmeans(matriz_data, centers = 3)
cast_data$cluster <- factor(kmeans_data$cluster)
centers <- as.data.frame(kmeans_data$centers)
centers
centers <- names("V1", "V2")
centers <- colnames("V1", "V2")
class(centers)
colnames(centers) <- c("V1", "V2")
centers
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
install.packages("randomcoloR")
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
y <- dist(iris[c(1,2)])
cl <- hclust(y)
gr <- cutree(cl,k=3)
x <- cbind(x,gr)
x
x <- iris[c(1,2)]
y <- dist(x)
cl <- hclust(y)
gr <- cutree(cl,k=3)
x <- cbind(x,gr)
head(x)
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
head(x)
library("qgraph", lib.loc="C:/PEREZOFT_DLLO/R_STAT_343/library")
head(big5)
data(big5)
data(big5groups)
head(big5)
head(big5groups)
subgrupo <- subset(x, groups == 1)
x
subgrupo <- subset(x, gr == 1)
head(subgrupo)
rownames(subgrupo)
nrow(x)
nrow(subgrupo)
subgrupo2 <- subset(x, gr == 2)
subgrupo3 <- subset(x, gr == 3)
nrow(subgrupo2)
nrow(subgrupo3)
head(subgrupo3)
big5groups
names(big5groups)
grupos <- cbind(subgrupo, subgrupo2, subgrupo3)
data(bfi)
nrow(bfi)
nrow(big5groups)
class(big5groups)
grupos <- list(subgrupo, subgrupo2, subgrupo3)
grupos
grupos <- list(g1=subgrupo, g2=subgrupo2, g3=subgrupo3)
grupos
rownames(subgrupo)
head(subgrupo)
grupos <- list(g1=rownames(subgrupo), g2=rownames(subgrupo2), g3=rownames(subgrupo3))
grupos
which(grepl(1, x$gr))
which(grepl(2, x$gr))
grupos_list <- list(g1=which(grepl(1, x$gr)), g2=which(grepl(2, x$gr)), g3=which(grepl(3, x$gr)))
grupos_list
gr
class(gr)
colnames(gr) <- c("grupo")
which(grepl(2, gr))
which(grepl(2, x$gr))
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
which(grepl(2, gr))
big5groups
class(big5groups)
length(big5groups)
length(big5groups$Openness)
length(big5groups$Conscientiousness)
length(big5groups$Extraversion)
grupos_list
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
detach("package:qgraph", unload=TRUE)
runApp('inst/appweb')
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
install.packages("qgraph")
shiny::runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
runApp('inst/appweb')
